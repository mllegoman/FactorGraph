#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/Xos.h>
#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

Display *dis;
Window win;
int screen;
GC gc;
XEvent event;


unsigned long HEX(char v[8]) { // Even though both HEX and RGB don't get used HERE >
int r, g, b;
r = 16*(v[1] - 48 - (((v[1] - 48)>>4)*7)) + v[2] - 48 - (((v[2] - 48)>>4)*7);
g = 16*(v[3] - 48 - (((v[3] - 48)>>4)*7)) + v[4] - 48 - (((v[4] - 48)>>4)*7);
b = 16*(v[5] - 48 - (((v[5] - 48)>>4)*7)) + v[6] - 48 - (((v[6] - 48)>>4)*7);
return b + (g<<8) + (r<<16);
}

unsigned long RGB(int r, int g, int b) {
return b + (g<<8) + (r<<16);
}

void init_x() {
XSetWindowAttributes *attributes;
dis=XOpenDisplay((char *)0);
screen=DefaultScreen(dis);
win=XCreateWindow(dis,DefaultRootWindow(dis),0,0,1300,300,5,CopyFromParent,CopyFromParent,CopyFromParent,CopyFromParent,attributes);
XSetStandardProperties(dis,win,"null","charmap",None,NULL,0,NULL);
XSelectInput(dis, win, ExposureMask|ButtonPressMask|KeyPressMask);
gc=XCreateGC(dis, win, 0,0);
XSetBackground(dis,gc,RGB(0,0,0));
XSetForeground(dis,gc,RGB(255,255,255));
XClearWindow(dis, win);
XMapRaised(dis, win);
}

int close_x() {

	XFreeGC(dis, gc);
	XDestroyWindow(dis,win);
	XCloseDisplay(dis);	
	exit(0);

}

long int smallest_factor(long int n){
long int i = 2;
    if ((n-1)&1) {
    return 2;
    }
    while(i*i<n){
    i++;
        if(n%i==0){ 
        return i;
        }
    }
return 1;
}

void write_P(){
int m = 0;
while(m<190000){
m++;
XSetForeground(dis,gc,RGB(0,0,0));
XFillRectangle(dis,win,gc,0,0,1300,300);
}
XSetForeground(dis,gc,RGB(255,255,0));
XFillRectangle(dis,win,gc,0,0,1,1);
XSetForeground(dis,gc,RGB(255,255,255));
long int i = 1;
long int s;
    while(i<50000000){
    i++;
    s = smallest_factor(i);
//    printf("%d\n", l);
//    fgetc(stdin);
    XSetForeground(dis,gc,RGB(255,i%256,255));
    XFillRectangle(dis,win,gc,i/s/100,s/100,1,1);
//    XSetForeground(dis,gc,RGB(i%256,255,255));
//    XFillRectangle(dis,win,gc,l/2,210-i/l/2,1,1);
//    XSetForeground(dis,gc,RGB(255,255,i%256));
//    XFillRectangle(dis,win,gc,l/2,i/l/2+210,1,1);
    }
}

int main(){
fgetc(stdin);
init_x();
fgetc(stdin);
write_P();
fgetc(stdin);
close_x();
}



